body {
	width: 100%;
	height: 100%;
	display: block;
	margin: 0;
	background-color: pink;
}

.max {
	width: 100%;
	height: 100%;
}

.half-page {
	width: 50%;
	height: 100%;
}

.column {
	height: 100%;
	width: 100%;
}

.row {
	width: 100%;
	height: 50%;
}

.column-short {
	height: 80%;
	width: 100%;
}

.row-thin {
	height: 20%;
	width: 100%;
}

.box {
	width: 50%;
	height: 20%;
}

.flex {
	display: flex;
}

.eighty {
	height: 80%;
}


/* Use this class on the PARENT of the <img> you are trying to center */
/* REMEMBER: the PARENT element tells the CHILD element(s) what to do! */
/* NOTE: Centering images in DIVs only works when the display property is "flex"! */
.center-img {
	display: flex;
	align-items: center;
	justify-content: center;
	overflow: hidden;
}

/* Use this class on any <img> you want to prevent from overflowing it's parent <div>! */
.contain-img {
	max-height: 99%;
	max-width: 99%;
}

.scale {
	width: 80%;
	height: 50%;
}

.red {
	background-color: red;
}
.orange {
	background-color: orange;
}
.yellow {
	background-color: yellow;
}
.green {
	background-color: green;
}
.blue {
	background-color: blue;
}
.purple {
	background-color: purple;
}

@media only screen and (max-width: 800px) {
	.column {
		height: 50%;
		width: 100%;
	}

	.restack {
		display: block;
	}
}
@media only screen and (max-width: 700px) {
	#chick {
		content: url("chick fil a short.png");
	}
	.purple {
		background-color: pink;
	}
}
@media only screen and (max-width: 282px) {
	.romario {
		width: 99%;
		height: 99%;
	}	
	.remove {
		display: none;
		width: 0%;
	}
	.half-page {
		width: 100%;
	}
	.row-thin {
		height: 0%;
	}
	.eighty {
		height: 100%;
	}
}

